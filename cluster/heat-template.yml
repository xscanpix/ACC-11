heat_template_version: 2016-10-14

description: HOT Template to create a computational cluster 

parameters:
  image:
    type: string
    label: Image name or ID
    description: Image to be used for compute instance
    default: "Ubuntu 16.04 LTS (Xenial Xerus) - latest"
  flavor: 
    type: string
    label: Flavor
    description: The flavor to be used
    default: "ACCHT18.normal"
  key:
    type: string
    label: Key name
    description: Name of key-pair
    default: acc-group11
  public_network:
    type: string
    label: Public network name or ID
    description: Public for floating ips
    default: "Public External IPv4 network"

resources:
  acc-group11-sg-master:
    type: OS::Neutron::SecurityGroup
    properties: 
      name: acc-group11-sg-master
      description: Accessible port on the master server
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - protocol: tcp # Flask server
          port_range_min: 5000
          port_range_max: 5000
        - protocol: tcp # Flower service
          port_range_min: 5555
          port_range_max: 5555
        - protocol: tcp # rabbitmq-server
          port_range_min: 5671
          port_range_max: 5672
        - protocol: tcp # rabbitmq-server-management
          port_range_min: 15672
          port_range_max: 15672
        - protocol: tcp # redis-server
          port_range_min: 6379
          port_range_max: 6379
  
# IPs
  floating_ip:
    type: OS::Neutron::FloatingIP
    properties: 
      floating_network: { get_param: public_network }

  floating_ip_assoc:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: floating_ip }
      port_id: { get_resource: master_port }

# Routers
  router: 
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: { get_param: public_network }

  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet: { get_resource: private_subnetwork }

#Ports
  master_port:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: private_network }
      security_groups:
      - { get_resource: acc-group11-sg-master }

# Networks
  private_network:
    type: OS::Neutron::Net
  private_subnetwork:
    type: OS::Neutron::Subnet
    properties:
      cidr: 10.10.10.0/24
      dns_nameservers: [130.238.164.6, 130.238.4.133, 130.238.7.10, 130.239.1.90,
        129.16.1.53]
      network_id: { get_resource: private_network }

# Servers
  master_server:
    type: OS::Nova::Server
    properties:
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key }
      networks: 
      - port: { get_resource: master_port }
      user_data_format: RAW
      user_data: |
      #cloud-config
      package_update: true
      package_upgrade: true

      packages:
        - docker-ce
        - python-pip
        - rabbitmq-server
        - redis-server

      apt:
        sources:
          curtin-dev-ppa.list:
            source: "deb [arch=amd64] https://download.docker.com/linux/ubuntu $RELEASE stable"
            keyid: 0EBFCD88
      runcmd:
        - git clone https://github.com/xscanpix/ACC-11/
        
        
